{"version":3,"file":"static/js/204.4fd6d53b.chunk.js","mappings":"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","sources":["helpers/get-button-styles.helper.ts","shared-components/icons/IconClose.component.tsx","user/components/UserUpdate.component.tsx","pages/Profile.page.tsx","shared-components/SectionHeading.component.tsx","shared-components/buttons/Button.component.tsx","shared-components/buttons/ButtonIcon.component.tsx","store/hooks/use-user-store.hook.ts"],"sourcesContent":["const getButtonStyles = (\r\n  variant: \"primary\" | \"success\" | \"warning\" | \"danger\",\r\n  baseClass: string,\r\n  isButtonIcon?: boolean,\r\n  isButtonBordered?: boolean\r\n) => {\r\n  const buttonBorderedStyleMap = {\r\n    primary: \"border-indigo-500 hover:border-indigo-700 text-indigo-500 hover:text-indigo-700\",\r\n    success: \"border-green-600 hover:border-green-700 text-green-600 hover:text-green-700\",\r\n    warning: \"border-orange-500 hover:border-orange-700 text-orange-500 hover:text-orange-700\",\r\n    danger: \"border-red-500 hover:border-red-700 text-red-500 hover:text-red-700\",\r\n  };\r\n  const buttonStyleMap = {\r\n    primary: \"bg-indigo-500 hover:bg-indigo-700\",\r\n    success: \"bg-green-600 hover:bg-green-700\",\r\n    warning: \"bg-orange-500 hover:bg-orange-700\",\r\n    danger: \"bg-red-500 hover:bg-red-700\",\r\n  };\r\n  const buttonIconStyleMap = {\r\n    primary: \"ring-indigo-500 hover:ring-indigo-700 text-indigo-500 hover:text-indigo-700 hover:ring-2\",\r\n    success: \"ring-green-600 hover:ring-green-700 text-green-600 hover:text-green-700 hover:ring-2\",\r\n    warning: \"ring-orange-500 hover:ring-orange-700 text-orange-500 hover:text-orange-700 hover:ring-2\",\r\n    danger: \"ring-red-500 hover:ring-red-700 text-red-500 hover:text-red-700 hover:ring-2\",\r\n  };\r\n  if (isButtonBordered) {\r\n    return `${buttonBorderedStyleMap[variant] || buttonBorderedStyleMap.primary} ${baseClass}`;\r\n  }\r\n  if (isButtonIcon) {\r\n    return `${buttonIconStyleMap[variant] || buttonIconStyleMap.primary} ${baseClass}`;\r\n  }\r\n  return `${buttonStyleMap[variant] || buttonStyleMap.primary} ${baseClass}`;\r\n};\r\n\r\nexport default getButtonStyles;\r\n","import React from \"react\";\r\n\r\nconst IconClose = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"1em\" width=\"1em\" {...props}>\r\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconClose);\r\n","import React from \"react\";\r\nimport useUserStore from \"../../store/hooks/use-user-store.hook\";\r\n\r\nconst UserUpdate = () => {\r\n  const { user } = useUserStore();\r\n  return <div aria-roledescription=\"user update\"></div>;\r\n};\r\n\r\nexport default React.memo(UserUpdate);\r\n","import React from \"react\";\r\nimport SectionHeadingComponent from \"../shared-components/SectionHeading.component\";\r\nimport useUserStore from \"../store/hooks/use-user-store.hook\";\r\nimport ButtonComponent from \"../shared-components/buttons/Button.component\";\r\nimport ButtonIconComponent from \"../shared-components/buttons/ButtonIcon.component\";\r\nimport IconCloseComponent from \"../shared-components/icons/IconClose.component\";\r\nimport UserUpdateComponent from \"../user/components/UserUpdate.component\";\r\n\r\nconst ProfilePage = () => {\r\n  const dialogRef = React.useRef<HTMLDialogElement>(null);\r\n  const { user } = useUserStore();\r\n\r\n  const handleOpenDailog = () => {\r\n    dialogRef.current?.showModal();\r\n  };\r\n  return (\r\n    <div aria-roledescription=\"profile\" className=\"h-full\">\r\n      <SectionHeadingComponent title=\"Home\" subtitle=\"View and edit your profile\" />\r\n      <div className=\"px-5 pt-10 flex items-start gap-20 h-[calc(100%-64px)] overflow-auto\">\r\n        <div className=\"flex items-center gap-5\">\r\n          <img src={user?.image} alt=\"\" className=\"w-24 h-24 rounded-full p-0.5 ring-4 ring-gray-300\" />\r\n          <div className=\"flex flex-col gap-2\">\r\n            <ButtonComponent text=\"Change Avatar\" />\r\n            <p>JPG, GIF or PNG. 1MB max.</p>\r\n          </div>\r\n        </div>\r\n        <ul className=\"divide-y-2 flex-1\">\r\n          <li className=\"flex items-center py-1\">\r\n            <span className=\"min-w-96 font-medium\">Full Name:</span>\r\n            <span className=\"flex-1\">\r\n              {user?.firstName} {user?.lastName}\r\n            </span>\r\n            <div className=\"flex justify-end\">\r\n              <ButtonComponent text=\"Edit\" isButtonBordered onClick={handleOpenDailog} />\r\n            </div>\r\n          </li>\r\n          <li className=\"flex items-center py-1\">\r\n            <span className=\"min-w-96 font-medium\">Email:</span>\r\n            <span className=\"flex-1\">{user?.email}</span>\r\n            <div className=\"flex justify-end\">\r\n              <ButtonComponent text=\"Edit\" isButtonBordered />\r\n            </div>\r\n          </li>\r\n          <li className=\"flex items-center py-1\">\r\n            <span className=\"min-w-96 font-medium\">Username:</span>\r\n            <span className=\"flex-1\">{user?.username}</span>\r\n            <div className=\"flex justify-end\">\r\n              <ButtonComponent text=\"Edit\" isButtonBordered />\r\n            </div>\r\n          </li>\r\n          <li className=\"flex items-center py-1\">\r\n            <span className=\"min-w-96 font-medium\">Gender:</span>\r\n            <span className=\"flex-1\">{user?.gender}</span>\r\n            <div className=\"flex justify-end\">\r\n              <ButtonComponent text=\"Edit\" isButtonBordered />\r\n            </div>\r\n          </li>\r\n          <li className=\" py-5 flex items-start\">\r\n            <div className=\"w-96 pr-5\">\r\n              <h3 className=\"text-base font-medium\">Suspend Account</h3>\r\n              <p className=\"text-gray-600 italic\">You can temporarily suspend your account here.</p>\r\n            </div>\r\n            <div className=\"flex flex-col gap-2\">\r\n              <ButtonComponent text=\"Suspend my account\" variant=\"warning\" />\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className=\" py-5 flex items-start\">\r\n              <div className=\"w-96 pr-5\">\r\n                <h3 className=\"text-base font-medium\">Delete Account</h3>\r\n                <p className=\"text-gray-600 italic\">\r\n                  No longer want to use our service? You can delete your account here. This action is not reversible.\r\n                  All information related to this account will be deleted permanently.\r\n                </p>\r\n              </div>\r\n              <div className=\"flex flex-col gap-2\">\r\n                <ButtonComponent text=\"Delete my account\" variant=\"danger\" />\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <dialog ref={dialogRef} className=\"rounded w-96 shadow-2xl ring-1 ring-gray-300\">\r\n        <header className=\"flex items-center justify-between p-2 border-b\">\r\n          <span className=\"font-medium text-base\">Update Profile</span>\r\n          <ButtonIconComponent variant=\"danger\" onClick={() => dialogRef.current?.close()}>\r\n            <IconCloseComponent className=\"w-3 h-3\" />\r\n          </ButtonIconComponent>\r\n        </header>\r\n        <div className=\"p-2\">\r\n          <UserUpdateComponent />\r\n        </div>\r\n        <footer className=\"flex justify-end p-2 border-t\">\r\n          <ButtonComponent text=\"Update\" onClick={() => dialogRef.current?.close()} />\r\n        </footer>\r\n      </dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProfilePage);\r\n","import React from \"react\";\r\n\r\nconst SectionHeading = ({ title, subtitle }: { title: string; subtitle?: string }) => {\r\n  return (\r\n    <div className=\"p-2 shadow-md\" aria-roledescription=\"section-heading\">\r\n      <h1 className=\"text-lg font-medium\">{title}</h1>\r\n      {subtitle && <h2 className=\"text-gray-600 italic\">{subtitle}</h2>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SectionHeading);\r\n","import React from \"react\";\r\nimport getButtonStyles from \"../../helpers/get-button-styles.helper\";\r\nimport ButtonTypes from \"./models/button-types.type\";\r\nimport ButtonVariants from \"./models/button-variants.type\";\r\n\r\ntype ButtonProps = {\r\n  onClick?: () => void;\r\n  text: string;\r\n  type?: ButtonTypes;\r\n  className?: string;\r\n  variant?: ButtonVariants;\r\n  isButtonBordered?: boolean;\r\n};\r\n\r\nconst Button = ({ className, onClick, text, variant = \"primary\", type = \"button\", isButtonBordered }: ButtonProps) => {\r\n  const baseClass = `${isButtonBordered ? \"\" : \"text-white\"} font-bold py-2 px-4 rounded transition-colors`;\r\n  const buttonClass = React.useRef(`${baseClass} ${className || \"\"}`);\r\n\r\n  const [buttonStyles, setButtonStyles] = React.useState(\r\n    getButtonStyles(variant, buttonClass.current, false, isButtonBordered)\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setButtonStyles(getButtonStyles(variant, buttonClass.current, false, isButtonBordered));\r\n  }, [variant, buttonClass, isButtonBordered]);\r\n\r\n  return (\r\n    <button className={buttonStyles} type={type} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default React.memo(Button);\r\n","import React from \"react\";\r\nimport getButtonStyles from \"../../helpers/get-button-styles.helper\";\r\nimport ButtonTypes from \"./models/button-types.type\";\r\nimport ButtonVariants from \"./models/button-variants.type\";\r\n\r\ntype ButtonIconProps = {\r\n  onClick?: () => void;\r\n  type?: ButtonTypes;\r\n  className?: string;\r\n  variant?: ButtonVariants;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst ButtonIcon = ({ children, className, onClick, type, variant = \"primary\" }: ButtonIconProps) => {\r\n  const baseClass = \"bg-white font-bold p-1 rounded transition-colors ring-1\";\r\n  const buttonClass = React.useRef(`${baseClass} ${className || \"\"}`);\r\n  const [buttonStyles, setButtonStyles] = React.useState(getButtonStyles(variant, buttonClass.current, true));\r\n\r\n  React.useEffect(() => {\r\n    setButtonStyles(getButtonStyles(variant, buttonClass.current, true));\r\n  }, [variant, buttonClass]);\r\n\r\n  return (\r\n    <button className={buttonStyles} type={type} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default React.memo(ButtonIcon);\r\n","import AppStore from \"..\";\r\nimport UserStore from \"../slices/user-store.slice\";\r\n\r\nconst useUserStore = () => {\r\n  const dispatch = AppStore.useAppDispatch();\r\n  const selectUser = AppStore.useAppSelector(UserStore.select.user);\r\n\r\n  const dispatchSetUser = () => {\r\n    dispatch(UserStore.fetchUser());\r\n  };\r\n\r\n  const dispatchResetUserStore = () => {\r\n    dispatch(UserStore.actions.reset());\r\n  };\r\n\r\n  return {\r\n    user: selectUser,\r\n    setUser: dispatchSetUser,\r\n    resetUserStore: dispatchResetUserStore,\r\n  };\r\n};\r\n\r\nexport default useUserStore;\r\n"],"names":["getButtonStyles","variant","baseClass","isButtonIcon","isButtonBordered","buttonBorderedStyleMap","primary","success","warning","danger","buttonStyleMap","buttonIconStyleMap","concat","IconClose","props","_jsx","viewBox","fill","height","width","children","d","React","UserUpdate","user","useUserStore","ProfilePage","dialogRef","_jsxs","className","SectionHeadingComponent","title","subtitle","src","image","alt","ButtonComponent","text","firstName","lastName","onClick","handleOpenDailog","_dialogRef$current","current","showModal","email","username","gender","ref","ButtonIconComponent","_dialogRef$current2","close","IconCloseComponent","UserUpdateComponent","_dialogRef$current3","SectionHeading","_ref","Button","type","buttonClass","buttonStyles","setButtonStyles","ButtonIcon","dispatch","AppStore","useAppDispatch","useAppSelector","UserStore","select","setUser","dispatchSetUser","fetchUser","resetUserStore","dispatchResetUserStore","actions","reset"],"sourceRoot":""}