{"version":3,"file":"static/js/831.f4f19324.chunk.js","mappings":"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","sources":["shared-components/icons/IconSearch.component.tsx","shared-components/inputs/SearchInput.component.tsx","shared-components/icons/IconEdit.component.tsx","shared-components/icons/IconDelete.component.tsx","shared-components/icons/IconDetail.component.tsx","helpers/highlight-keyword.helper.ts","products/components/ProductList.component.tsx","pages/Product.page.tsx","shared-components/SectionHeading.component.tsx","shared-components/buttons/Button.component.tsx","shared-components/inputs/BaseInput.component.tsx","store/hooks/use-product-store.hook.ts"],"sourcesContent":["import React from \"react\";\r\n\r\nconst IconSearch = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      viewBox=\"0 0 24 24\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19 11 A8 8 0 0 1 11 19 A8 8 0 0 1 3 11 A8 8 0 0 1 19 11 z\" />\r\n      <path d=\"M21 21l-4.35-4.35\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconSearch);\r\n","import React from \"react\";\r\nimport BaseInputComponent from \"./BaseInput.component\";\r\nimport ButtonIconComponent from \"../buttons/ButtonIcon.component\";\r\nimport IconSearchComponent from \"../icons/IconSearch.component\";\r\n\r\nconst SearchInput = ({ onSearch, placeholder }: { placeholder?: string; onSearch: (value: string) => void }) => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const handleOnSearch = () => {\r\n    onSearch(value);\r\n  };\r\n  return (\r\n    <div className=\"flex items-center\" aria-roledescription=\"search\">\r\n      <div className=\"flex-1\">\r\n        <BaseInputComponent\r\n          placeholder={placeholder || \"Search...\"}\r\n          type=\"search\"\r\n          onChange={(event) => {\r\n            setValue(event.target.value);\r\n          }}\r\n          className=\"border-r-0 rounded-e-none\"\r\n        />\r\n      </div>\r\n      <ButtonIconComponent onClick={handleOnSearch}>\r\n        <IconSearchComponent className=\"w-5 h-5\" />\r\n      </ButtonIconComponent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SearchInput);\r\n","import React from \"react\";\r\n\r\nconst IconEdit = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg viewBox=\"0 0 1024 1024\" fill=\"currentColor\" height=\"1em\" width=\"1em\" {...props}>\r\n      <path d=\"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconEdit);\r\n","import React from \"react\";\r\n\r\nconst IconDelete = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"1em\" width=\"1em\" {...props}>\r\n      <path d=\"M6 19a2 2 0 002 2h8a2 2 0 002-2V7H6v12M8 9h8v10H8V9m7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconDelete);\r\n","import React from \"react\";\r\n\r\nconst IconDetail = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"1em\" width=\"1em\" {...props}>\r\n      <path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z\" />\r\n      <path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconDetail);\r\n","const highlightKeyword = (text: string, keyword: string) => {\r\n  if (!text || !keyword) return text;\r\n  const regex = new RegExp(keyword, \"gi\");\r\n  return text.replace(\r\n    regex,\r\n    (match) => `<span class=\"underline font-semibold text-indigo-500\" title='Search Term'>${match}</span>`\r\n  );\r\n};\r\n\r\nexport default highlightKeyword;\r\n","import React from \"react\";\r\nimport useProductStore from \"../../store/hooks/use-product-store.hook\";\r\nimport ButtonIconComponent from \"../../shared-components/buttons/ButtonIcon.component\";\r\nimport IconEditComponent from \"../../shared-components/icons/IconEdit.component\";\r\nimport IconDeleteComponent from \"../../shared-components/icons/IconDelete.component\";\r\nimport IconDetailComponent from \"../../shared-components/icons/IconDetail.component\";\r\nimport highlightKeyword from \"../../helpers/highlight-keyword.helper\";\r\n\r\nconst ProductList = ({ keyword }: { keyword?: string }) => {\r\n  const { productList } = useProductStore();\r\n  if (!productList || productList.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <table className=\"w-full\" aria-roledescription=\"product list\">\r\n      <thead className=\"border-b-2 font-semibold\">\r\n        <tr>\r\n          <th className=\"text-left p-2\">Image</th>\r\n          <th className=\"text-left p-2\">Name</th>\r\n          <th className=\"text-left p-2\">Brand</th>\r\n          <th className=\"text-left p-2\">Description</th>\r\n          <th className=\"text-left p-2\">Price</th>\r\n          <th className=\"text-left p-2\">Discount</th>\r\n          <th className=\"text-left p-2\">Rating</th>\r\n          <th className=\"text-left p-2\">Quantity</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {productList?.map((product) => (\r\n          <tr key={product.id} className=\"border-b\">\r\n            <td className=\"p-2 w-24\">\r\n              <img src={product.thumbnail} alt={product.title} className=\"w-24 rounded\" />\r\n            </td>\r\n            <td className=\"p-2\" dangerouslySetInnerHTML={{ __html: highlightKeyword(product.title, keyword) }}></td>\r\n            <td className=\"p-2\">{product.brand}</td>\r\n            <td\r\n              className=\"p-2 w-56\"\r\n              dangerouslySetInnerHTML={{ __html: highlightKeyword(product.description, keyword) }}\r\n            ></td>\r\n            <td className=\"p-2\">{product.price}$</td>\r\n            <td className=\"p-2\">{product.discountPercentage}%</td>\r\n            <td className=\"p-2\">{product.rating}</td>\r\n            <td className=\"p-2\">{product.stock}</td>\r\n            <td className=\"p-2\">\r\n              <div className=\"flex gap-2 flex-nowrap justify-end items-center\">\r\n                <ButtonIconComponent variant=\"primary\">\r\n                  <IconDetailComponent className=\"w-5 h-5\" />\r\n                </ButtonIconComponent>\r\n                <ButtonIconComponent variant=\"warning\">\r\n                  <IconEditComponent className=\"w-5 h-5\" />\r\n                </ButtonIconComponent>\r\n                <ButtonIconComponent variant=\"danger\">\r\n                  <IconDeleteComponent className=\"w-5 h-5\" />\r\n                </ButtonIconComponent>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProductList);\r\n","import React from \"react\";\r\nimport SectionHeadingComponent from \"../shared-components/SectionHeading.component\";\r\nimport SearchInputComponent from \"../shared-components/inputs/SearchInput.component\";\r\nimport useProductStore from \"../store/hooks/use-product-store.hook\";\r\nimport ProductListComponent from \"../products/components/ProductList.component\";\r\nimport ButtonComponent from \"../shared-components/buttons/Button.component\";\r\nimport useToastrStore from \"../store/hooks/use-toastr-store.hook\";\r\n\r\nconst ProductPage = () => {\r\n  const { addToastr } = useToastrStore();\r\n  const [searchKeyword, setSearchKeyword] = React.useState<string>(\"\");\r\n  const { searchProductList, resetProductStore } = useProductStore();\r\n  const handleOnSearch = React.useCallback(\r\n    (value: string) => {\r\n      setSearchKeyword(value);\r\n      if (!value) {\r\n        addToastr({\r\n          message: \"Please enter search keyword\",\r\n          variant: \"danger\",\r\n        });\r\n        return;\r\n      }\r\n      searchProductList(value);\r\n    },\r\n    [searchProductList]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    return () => resetProductStore();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div aria-roledescription=\"product\" className=\"h-full\">\r\n      <SectionHeadingComponent title=\"Product\" subtitle=\"View, edit, add, or delete product\" />\r\n      <div className=\"p-5 h-[calc(100%-64px)]\">\r\n        <div className=\"flex justify-between pb-5\">\r\n          <SearchInputComponent placeholder=\"Search products...\" onSearch={handleOnSearch} />\r\n          <div>\r\n            <ButtonComponent text=\"Add Product\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"h-[calc(100%-56px)] overflow-auto\">\r\n          <ProductListComponent keyword={searchKeyword} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProductPage);\r\n","import React from \"react\";\r\n\r\nconst SectionHeading = ({ title, subtitle }: { title: string; subtitle?: string }) => {\r\n  return (\r\n    <div className=\"p-2 shadow-md\" aria-roledescription=\"section-heading\">\r\n      <h1 className=\"text-lg font-medium\">{title}</h1>\r\n      {subtitle && <h2 className=\"text-gray-600 italic\">{subtitle}</h2>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SectionHeading);\r\n","import React from \"react\";\r\nimport getButtonStyles from \"../../helpers/get-button-styles.helper\";\r\nimport ButtonTypes from \"./models/button-types.type\";\r\nimport ButtonVariants from \"./models/button-variants.type\";\r\n\r\ntype ButtonProps = {\r\n  onClick?: () => void;\r\n  text: string;\r\n  type?: ButtonTypes;\r\n  className?: string;\r\n  variant?: ButtonVariants;\r\n  isButtonBordered?: boolean;\r\n};\r\n\r\nconst Button = ({ className, onClick, text, variant = \"primary\", type = \"button\", isButtonBordered }: ButtonProps) => {\r\n  const baseClass = `${isButtonBordered ? \"\" : \"text-white\"} font-bold py-2 px-4 rounded transition-colors`;\r\n  const buttonClass = React.useRef(`${baseClass} ${className || \"\"}`);\r\n\r\n  const [buttonStyles, setButtonStyles] = React.useState(\r\n    getButtonStyles(variant, buttonClass.current, false, isButtonBordered)\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setButtonStyles(getButtonStyles(variant, buttonClass.current, false, isButtonBordered));\r\n  }, [variant, buttonClass, isButtonBordered]);\r\n\r\n  return (\r\n    <button className={buttonStyles} type={type} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default React.memo(Button);\r\n","import React from \"react\";\r\n\r\n// TODO: input tiplerini barındıran bir enum oluşturulacak.\r\nexport type InputTypes =\r\n  | \"text\"\r\n  | \"number\"\r\n  | \"email\"\r\n  | \"password\"\r\n  | \"date\"\r\n  | \"datetime-local\"\r\n  | \"time\"\r\n  | \"month\"\r\n  | \"week\"\r\n  | \"url\"\r\n  | \"search\"\r\n  | \"tel\"\r\n  | \"color\"\r\n  | \"file\"\r\n  | \"range\"\r\n  | \"hidden\"\r\n  | \"checkbox\"\r\n  | \"radio\";\r\n\r\ninterface BaseInputProps {\r\n  type?: InputTypes;\r\n  label?: string;\r\n  id?: string;\r\n  value?: string;\r\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\r\n  placeholder?: string;\r\n  className?: string;\r\n  name?: string;\r\n}\r\n\r\nconst Input: React.FC<BaseInputProps> = ({\r\n  type = \"text\",\r\n  label: inputLabel,\r\n  id: inputId,\r\n  value: inputValue,\r\n  onChange: onInputChange,\r\n  placeholder,\r\n  className,\r\n  name,\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-2\" aria-roledescription=\"base-input\">\r\n      {inputLabel && (\r\n        <label className=\"font-medium text-gray-900\" htmlFor={inputId}>\r\n          {inputLabel}\r\n        </label>\r\n      )}\r\n      <input\r\n        className={`outline-none ring-1 ring-gray-300 px-2 py-1 rounded focus:ring-indigo-500 focus:ring-2 transition-colors ${\r\n          className || \"\"\r\n        }`}\r\n        name={name}\r\n        type={type}\r\n        id={inputId}\r\n        value={inputValue}\r\n        onChange={onInputChange}\r\n        placeholder={placeholder}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Input);\r\n","import AppStore from \"..\";\r\nimport ProductStore from \"../slices/product-store.slice\";\r\n\r\nconst useProductStore = () => {\r\n  const dispatch = AppStore.useAppDispatch();\r\n  const selectProductList = AppStore.useAppSelector(ProductStore.select.getProductList);\r\n  const dispatchSearchProductList = (searchKeyword: string) => {\r\n    dispatch(ProductStore.searchProductList(searchKeyword));\r\n  };\r\n  const dispatchResetProductStore = () => {\r\n    dispatch(ProductStore.actions.reset());\r\n  };\r\n\r\n  return {\r\n    productList: selectProductList,\r\n    searchProductList: dispatchSearchProductList,\r\n    resetProductStore: dispatchResetProductStore,\r\n  };\r\n};\r\n\r\nexport default useProductStore;\r\n"],"names":["IconSearch","props","_jsxs","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","height","width","children","_jsx","d","React","SearchInput","_ref","onSearch","placeholder","value","setValue","className","BaseInputComponent","type","onChange","event","target","ButtonIconComponent","onClick","handleOnSearch","IconSearchComponent","IconEdit","IconDelete","IconDetail","highlightKeyword","text","keyword","regex","RegExp","replace","match","concat","ProductList","productList","useProductStore","length","map","product","src","thumbnail","alt","title","dangerouslySetInnerHTML","__html","brand","description","price","discountPercentage","rating","stock","variant","IconDetailComponent","IconEditComponent","IconDeleteComponent","id","ProductPage","addToastr","useToastrStore","searchKeyword","setSearchKeyword","searchProductList","resetProductStore","message","SectionHeadingComponent","subtitle","SearchInputComponent","ButtonComponent","ProductListComponent","SectionHeading","Button","isButtonBordered","baseClass","buttonClass","buttonStyles","setButtonStyles","getButtonStyles","current","Input","label","inputLabel","inputId","inputValue","onInputChange","name","htmlFor","dispatch","AppStore","useAppDispatch","useAppSelector","ProductStore","select","getProductList","dispatchResetProductStore","actions","reset"],"sourceRoot":""}