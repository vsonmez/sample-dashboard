{"version":3,"file":"static/js/146.64826b46.chunk.js","mappings":"4HAAA,MAMA,EAN8BA,GAC5BA,EACGC,QAAQ,WAAY,OACpBA,QAAQ,MAAOD,GAAQA,EAAIE,gBAC3BC,M,gFC8BL,MAAMC,EAAkCC,IASjC,IATkC,KACvCC,EAAO,OACPC,MAAOC,EACPC,GAAIC,EACJC,MAAOC,EACPC,SAAUC,EAAa,YACvBC,EAAW,UACXC,EAAS,KACTC,GACDZ,EACC,OACEa,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAsB,uBAAqB,aAAYG,SAAA,CACnEX,IACCY,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,4BAA4BK,QAASX,EAAQS,SAC3DX,KAGLY,EAAAA,EAAAA,KAAA,SACEJ,UAAS,4GAAAM,OACPN,GAAa,IAEfC,KAAMA,EACNX,KAAMA,EACNG,GAAIC,EACJC,MAAOC,EACPC,SAAUC,EACVC,YAAaA,MAEX,EAIV,EAAeQ,EAAAA,KAAWnB,G,cChE1B,MAAMoB,EAAcC,IAEhBP,EAAAA,EAAAA,MAAA,OACEQ,KAAK,OACLC,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,QAAQ,YACRC,OAAO,MACPC,MAAM,SACFR,EAAKN,SAAA,EAETC,EAAAA,EAAAA,KAAA,QAAMc,EAAE,gEACRd,EAAAA,EAAAA,KAAA,QAAMc,EAAE,yBAKd,EAAeX,EAAAA,KAAWC,GChBpBW,EAAc9B,IAA6F,IAA5F,SAAE+B,EAAQ,YAAErB,GAA0EV,EACzG,MAAOM,EAAO0B,GAAYd,EAAAA,SAAe,IAIzC,OACEL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAoB,uBAAqB,SAAQG,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,SAAQG,UACrBC,EAAAA,EAAAA,KAACkB,EAAkB,CACjBvB,YAAaA,GAAe,YAC5BT,KAAK,SACLO,SAAW0B,IACTF,EAASE,EAAMC,OAAO7B,MAAM,EAE9BK,UAAU,iCAGdI,EAAAA,EAAAA,KAACqB,EAAAA,EAAmB,CAACC,QAfFC,KACrBP,EAASzB,EAAM,EAcgCQ,UAC3CC,EAAAA,EAAAA,KAACwB,EAAmB,CAAC5B,UAAU,gBAE7B,EAIV,EAAeO,EAAAA,KAAWY,G,cC3B1B,MAAMU,EAAYpB,IAEdL,EAAAA,EAAAA,KAAA,OAAKW,QAAQ,gBAAgBL,KAAK,eAAeM,OAAO,MAAMC,MAAM,SAAUR,EAAKN,UACjFC,EAAAA,EAAAA,KAAA,QAAMc,EAAE,uZAKd,EAAeX,EAAAA,KAAWsB,GCRpBC,EAAcrB,IAEhBL,EAAAA,EAAAA,KAAA,OAAKW,QAAQ,YAAYL,KAAK,eAAeM,OAAO,MAAMC,MAAM,SAAUR,EAAKN,UAC7EC,EAAAA,EAAAA,KAAA,QAAMc,EAAE,4FAKd,EAAeX,EAAAA,KAAWuB,GCRpBC,EAActB,IAEhBP,EAAAA,EAAAA,MAAA,OAAKa,QAAQ,YAAYL,KAAK,eAAeM,OAAO,MAAMC,MAAM,SAAUR,EAAKN,SAAA,EAC7EC,EAAAA,EAAAA,KAAA,QAAMc,EAAE,uHACRd,EAAAA,EAAAA,KAAA,QAAMc,EAAE,2CAKd,EAAeX,EAAAA,KAAWwB,GCF1B,EATyBC,CAACC,EAAcC,KACtC,IAAKD,IAASC,EAAS,OAAOD,EAC9B,MAAME,EAAQ,IAAIC,OAAOF,EAAS,MAClC,OAAOD,EAAKhD,QACVkD,GACCE,GAAK,+EAAA/B,OAAkF+B,EAAK,YAC9F,E,kCCMH,MAAMC,EAAcjD,IAAuF,IAAtF,QAAE6C,EAAO,gBAAEK,GAAqElD,EACnG,MAAM,YAAEmD,EAAW,mBAAEC,IAAuBC,EAAAA,EAAAA,MACtC,SAAEC,IAAaC,EAAAA,EAAAA,MACf,UAAEC,IAAcC,EAAAA,EAAAA,MAChB,UAAEC,IAAcC,EAAAA,EAAAA,KA8BtB,OAAKR,GAAsC,IAAvBA,EAAYS,QAK9B7C,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,+CAA8CG,UAC3DD,EAAAA,EAAAA,MAAA,SAAOF,UAAU,yBAAyB,uBAAqB,eAAcG,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,gEAA+DG,UAC9ED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,8BAA6BG,SAAC,WAC5CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,8BAA6BG,SAAC,UAC5CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,8BAA6BG,SAAC,WAC5CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,8BAA6BG,SAAC,iBAC5CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,8BAA6BG,SAAC,WAC5CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,8BAA6BG,SAAC,cAC5CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,8BAA6BG,SAAC,YAC5CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,8BAA6BG,SAAC,cAC5CC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,sCAGlBI,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,uBAAsBG,SACzB,OAAXqC,QAAW,IAAXA,OAAW,EAAXA,EAAaU,KAAKC,IACjBjD,EAAAA,EAAAA,MAAA,MAAqBF,UAAU,8CAA6CG,SAAA,EAC1EC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,MAAKG,UACjBC,EAAAA,EAAAA,KAAA,OAAKgD,IAAKD,EAAQE,UAAWC,IAAKH,EAAQI,MAAOvD,UAAU,oBAE7DI,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,MAAMwD,wBAAyB,CAAEC,OAAQzB,EAAiBmB,EAAQI,MAAOrB,OACvF9B,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,MAAKG,SAAEgD,EAAQO,SAC7BtD,EAAAA,EAAAA,KAAA,MACEJ,UAAU,WACVwD,wBAAyB,CAAEC,OAAQzB,EAAiBmB,EAAQQ,YAAazB,OAE3EhC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,MAAKG,SAAA,CAAEgD,EAAQS,MAAM,QACnC1D,EAAAA,EAAAA,MAAA,MAAIF,UAAU,MAAKG,SAAA,CAAEgD,EAAQU,mBAAmB,QAChDzD,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,MAAKG,SAAEgD,EAAQW,UAC7B1D,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,MAAKG,SAAEgD,EAAQY,SAC7B3D,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,MAAKG,UACjBD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDG,SAAA,EAC9DC,EAAAA,EAAAA,KAACqB,EAAAA,EAAmB,CAACuC,QAAQ,UAAS7D,UACpCC,EAAAA,EAAAA,KAAC6D,EAAmB,CAACjE,UAAU,eAEjCI,EAAAA,EAAAA,KAACqB,EAAAA,EAAmB,CAACuC,QAAQ,UAAUtC,QAASA,IArEjCyB,KAC7BV,EAAmBU,GACfZ,GACFA,GACF,EAiEoE2B,CAAsBf,GAAShD,UACnFC,EAAAA,EAAAA,KAAC+D,EAAiB,CAACnE,UAAU,eAE/BI,EAAAA,EAAAA,KAACqB,EAAAA,EAAmB,CAACuC,QAAQ,SAAStC,QAASA,IAjElCyB,KAC3BR,EAAS,CACPV,KAAK,mCAAD3B,OAAqC6C,EAAQI,MAAK,KACtDA,MAAO,SACPS,QAAS,SACTI,gBAAkBC,IAEdxB,EADEwB,EACQ,CACRL,QAAS,UACTM,QAAQ,IAADhE,OAAMyC,EAAS,kBAAAzC,OAAiB6C,EAAQI,MAAK,MAG5C,CACRS,QAAS,UACTM,QAAQ,IAADhE,OAAMyC,EAAS,gCAAAzC,OAA+B6C,EAAQI,MAAK,MAEtE,GAEF,EA+CiEgB,CAAoBpB,GAAShD,UAChFC,EAAAA,EAAAA,KAACoE,EAAmB,CAACxE,UAAU,qBAvB9BmD,EAAQ1D,aArBlB,IAoDD,EAIV,EAAec,EAAAA,KAAW+B,G,4CCvG1B,MAMA,EAN8BtD,GAC5BA,EACGyF,MAAM,KACNvB,KAAKwB,GAASA,EAAKC,OAAO,GAAGzF,cAAgBwF,EAAKE,MAAM,KACxDC,KAAK,K,aCUV,MAAMC,EAAazF,IAAoC,IAAnC,SAAE0F,GAA2B1F,EAC/C,MAAM,kBAAE2F,EAAiB,qBAAEC,EAAoB,gBAAEC,IAAoBxC,EAAAA,EAAAA,KAC/DyC,EAAa5E,EAAAA,SAAc,IACxByE,EAAkB9B,KAAKkC,IAAQ,CACpCzF,MAAOyF,EACP7F,MAAO8F,EAAqBD,QAE7B,CAACJ,IAEJzE,EAAAA,WAAgB,KACmB,IAA7ByE,EAAkB/B,QACpBgC,GACF,GAEC,CAACD,IAEJ,MAAMM,EAAmBC,EAAAA,KAAaC,MAAM,CAC1C9B,MAAO6B,EAAAA,KAAaE,SAAS,qBAC7BL,SAAUG,EAAAA,KAAaE,SAAS,wBAChC9B,YAAa4B,EAAAA,KAAaE,SAAS,2BACnC5B,mBAAoB0B,EAAAA,KAEjBG,IAAI,EAAG,0DACPC,IAAI,IAAK,yDACTF,SAAS,mCACZ7B,MAAO2B,EAAAA,KAAaG,IAAI,EAAG,4CAA4CD,SAAS,qBAChF3B,OAAQyB,EAAAA,KAELG,IAAI,EAAG,6CACPC,IAAI,EAAG,0CACPF,SAAS,sBACZ1B,MAAOwB,EAAAA,KAAaG,IAAI,EAAG,4CAA4CD,SAAS,qBAChFlC,MAAOgC,EAAAA,KAAaE,SAAS,uBAGzBG,EAAiC,CACrClC,OAAsB,OAAfwB,QAAe,IAAfA,OAAe,EAAfA,EAAiBxB,QAAS,GACjC0B,UAAyB,OAAfF,QAAe,IAAfA,OAAe,EAAfA,EAAiBE,WAAY,GACvCzB,aAA4B,OAAfuB,QAAe,IAAfA,OAAe,EAAfA,EAAiBvB,cAAe,GAC7CE,oBAAmC,OAAfqB,QAAe,IAAfA,OAAe,EAAfA,EAAiBrB,qBAAsB,GAC3DD,OAAsB,OAAfsB,QAAe,IAAfA,OAAe,EAAfA,EAAiBtB,QAAS,GACjCE,QAAuB,OAAfoB,QAAe,IAAfA,OAAe,EAAfA,EAAiBpB,SAAU,GACnCC,OAAsB,OAAfmB,QAAe,IAAfA,OAAe,EAAfA,EAAiBnB,QAAS,GACjCR,OAAsB,OAAf2B,QAAe,IAAfA,OAAe,EAAfA,EAAiB3B,QAAS,IAGnC,OACEnD,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,4BAA2BG,UACxCC,EAAAA,EAAAA,KAACyF,EAAAA,GAAM,CAACD,cAAeA,EAAeN,iBAAkBA,EAAkBP,SAAUA,EAAUe,oBAAkB,EAAA3F,UAC9GD,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAAC/F,UAAU,yBAAwBG,SAAA,EACtCC,EAAAA,EAAAA,KAAC4F,EAAAA,EAAyB,CAACC,UAAU,QAAQR,UAAQ,KACrDrF,EAAAA,EAAAA,KAAC8F,EAAAA,EAA0B,CAACD,UAAU,WAAWE,QAAShB,EAAYM,UAAQ,KAC9ErF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAyB,CAACC,UAAU,cAAcR,UAAQ,KAC3DrF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAyB,CAACC,UAAU,qBAAqB3G,KAAK,SAASmG,UAAQ,KAChFrF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAyB,CAACC,UAAU,QAAQ3G,KAAK,SAASmG,UAAQ,KACnErF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAyB,CAACC,UAAU,SAAS3G,KAAK,SAASmG,UAAQ,KACpErF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAyB,CAACC,UAAU,QAAQ3G,KAAK,SAASmG,UAAQ,KACnErF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAyB,CAACC,UAAU,QAAQR,UAAQ,KACrDrF,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,8BAA6BG,UAC1CC,EAAAA,EAAAA,KAACgG,EAAAA,EAAe,CAAC9G,KAAK,SAAS2C,KAAMiD,EAAkB,SAAW,gBAIpE,EAIV,EAAe3E,EAAAA,KAAWuE,G,cCtE1B,MAAMuB,EAAcA,KAClB,MAAM,UAAEtD,IAAcC,EAAAA,EAAAA,KAChBsD,EAAY/F,EAAAA,OAAgC,OAC5C,UAAEsC,IAAcC,EAAAA,EAAAA,MACfyD,EAAeC,GAAoBjG,EAAAA,SAAuB,KAC3D,kBAAEkG,EAAiB,kBAAEC,EAAiB,gBAAExB,EAAe,mBAAEzC,IAAuBC,EAAAA,EAAAA,KAEhFf,EAAiBpB,EAAAA,aACpBZ,IACC6G,EAAiB7G,GACZA,EAOL8G,EAAkB9G,GANhBkD,EAAU,CACRyB,QAAQ,GAADhE,OAAKyC,EAAS,uDACrBiB,QAAS,WAIW,GAE1B,CAACyC,EAAmB5D,EAAWE,IAG3B4D,EAAoBpG,EAAAA,aAAkB,KAAO,IAADqG,EAC/B,QAAjBA,EAAAN,EAAUO,eAAO,IAAAD,GAAjBA,EAAmBE,QACnBrE,EAAmB,KAAK,GACvB,CAAC6D,EAAW7D,IAMTsE,EAAmBxG,EAAAA,aAAkB,KACzCsC,EAAU,CACRyB,QAAQ,GAADhE,OAAKyC,EAAS,MAAAzC,OACnB4E,EAAkB,0CAA4C,wCAAuC,KAEvGlB,QAAS,YAEX2C,GAAmB,GAClB,CAAC9D,EAAW8D,EAAmB5D,EAAWmC,IAW7C,OALA3E,EAAAA,WAAgB,IACP,IAAMmG,KAEZ,KAGDxG,EAAAA,EAAAA,MAAA8G,EAAAA,SAAA,CAAA7G,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAK,uBAAqB,UAAUF,UAAU,SAAQG,SAAA,EACpDC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAuB,CAAC1D,MAAM,UAAU2D,SAAS,wCAClDhH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CG,SAAA,EAC3DD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBG,SAAA,EACnCC,EAAAA,EAAAA,KAAC+G,EAAoB,CAACpH,YAAY,qBAAqBqB,SAAUO,KACjEvB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACgG,EAAAA,EAAe,CAACnE,KAAK,cAAcP,QA/BvB0F,KAAO,IAADC,EACZ,QAAjBA,EAAAf,EAAUO,eAAO,IAAAQ,GAAjBA,EAAmBC,WAAW,UAiCxBlH,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,sBAAqBG,UAClCC,EAAAA,EAAAA,KAACmH,EAAoB,CAACrF,QAASqE,EAAehE,gBArB1B2B,KAAO,IAADsD,EACjB,QAAjBA,EAAAlB,EAAUO,eAAO,IAAAW,GAAjBA,EAAmBF,WAAW,aAwB5BlH,EAAAA,EAAAA,KAAA,UACE,uBAAqB,qBACrBqH,IAAKnB,EACLtG,UAAU,sDAAqDG,UAE/DD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBG,SAAA,EACnCC,EAAAA,EAAAA,KAACsH,EAAAA,EAAqB,CACpBnE,MAAO2B,EAAkB,iBAAmB,cAC5CyC,QAAShB,KAEXvG,EAAAA,EAAAA,KAACwH,EAAmB,CAAC7C,SAAUgC,WAGlC,EAIP,EAAexG,EAAAA,KAAW8F,E,yDC5F1B,MAAMwB,EAAiBxI,IAAgE,IAA/D,MAAEkE,EAAK,SAAE2D,GAAgD7H,EAC/E,OACEa,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAyB,uBAAqB,kBAAiBG,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,sBAAqBG,SAAEoD,IACpC2D,IAAY9G,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAE+G,MAC/C,EAIV,EAAe3G,EAAAA,KAAWsH,E,4ECF1B,MAAMC,EAAezI,IAA4C,IAA3C,QAAEsI,EAAO,MAAEpE,GAA0BlE,EACzD,OACEa,EAAAA,EAAAA,MAAA,UAAQF,UAAU,iDAAgDG,SAAA,EAChEC,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,sCAAqCG,SAAEoD,KACvDnD,EAAAA,EAAAA,KAACqB,EAAAA,EAAmB,CAACuC,QAAQ,SAAStC,QAASiG,EAAQxH,UACrDC,EAAAA,EAAAA,KAAC2H,EAAAA,EAAkB,CAAC/H,UAAU,gBAEzB,EAIb,EAAeO,EAAAA,KAAWuH,E,6ECV1B,MAAME,EAAc3I,IAAmE,IAAlE,UAAE4G,EAAS,KAAE3G,EAAO,UAAW2I,GAA6B5I,EAC/E,MAAM6I,GAASC,EAAAA,EAAAA,OACRC,EAAUC,GAAe9H,EAAAA,SAAe2H,EAAOI,OAAOrC,IAK7D,OAHA1F,EAAAA,WAAgB,KACd8H,EAAYH,EAAOI,OAAOrC,GAAW,GACpC,CAACiC,EAAQjC,KAEV/F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBG,SAAA,EAClCD,EAAAA,EAAAA,MAAA,SAAOG,QAAS4F,EAAWjG,UAAU,gBAAeG,SAAA,EACjDoI,EAAAA,EAAAA,GAAqBtC,GAAW,IAAEgC,EAAUxC,UAAWrF,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,eAAcG,SAAC,MAAW,KAAM,QAE1GC,EAAAA,EAAAA,KAACoI,EAAAA,GAAK,CACJlJ,KAAMA,EACNG,GAAIwG,EACJhG,KAAMgG,EACNjG,UAAS,gBAAAM,OAAkB8H,EAAW,eAAiB,oBACnDH,KAEN7H,EAAAA,EAAAA,KAACqI,EAAAA,GAAY,CAACC,UAAU,OAAO1I,UAAU,uBAAuBC,KAAMgG,MAClE,EAIV,EAAe1F,EAAAA,KAAWyH,E,6ECzB1B,MAAMW,EAAoBtJ,IAAmE,IAAlE,UAAE4G,EAAS,QAAEE,KAAY8B,GAAmC5I,EACrF,MAAM6I,GAASC,EAAAA,EAAAA,OACRC,EAAUC,GAAe9H,EAAAA,SAAe2H,EAAOI,OAAOrC,IAM7D,OAJA1F,EAAAA,WAAgB,KACd8H,EAAYH,EAAOI,OAAOrC,GAAW,GACpC,CAACiC,EAAQjC,KAGV/F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBG,SAAA,EAClCD,EAAAA,EAAAA,MAAA,SAAOG,QAAS4F,EAAWjG,UAAU,gBAAeG,SAAA,EACjDoI,EAAAA,EAAAA,GAAqBtC,GACrBgC,EAAUxC,UAAWrF,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,eAAcG,SAAC,MAAW,KAAM,QAExED,EAAAA,EAAAA,MAACsI,EAAAA,GAAK,CACJxI,UAAS,gBAAAM,OAAkB8H,EAAW,eAAiB,iBACvDQ,GAAG,SACH3I,KAAMgG,EACNxG,GAAIwG,KACAgC,EAAS9H,SAAA,EAEbC,EAAAA,EAAAA,KAAA,UAAQT,MAAM,GAAEQ,SAAC,qBAChBgG,EAAQjD,KAAI2F,IAAA,IAAC,MAAElJ,EAAK,MAAEJ,GAAOsJ,EAAA,OAC5BzI,EAAAA,EAAAA,KAAA,UAAoBT,MAAOA,EAAMQ,SAC9BZ,GADUI,EAEJ,QAGbS,EAAAA,EAAAA,KAACqI,EAAAA,GAAY,CAACC,UAAU,OAAO1I,UAAU,uBAAuBC,KAAMgG,MAClE,EAIV,EAAe1F,EAAAA,KAAWoI,E,yDCtC1B,MAgCA,EAhCwBjG,KACtB,MAAMoG,EAAWC,EAAAA,EAASC,iBAoB1B,MAAO,CACLxG,YApBwBuG,EAAAA,EAASE,eAAeC,EAAAA,EAAaC,OAAOC,gBAqBpEpE,kBApB8B+D,EAAAA,EAASE,eAAeC,EAAAA,EAAaC,OAAOE,sBAqB1EnE,gBApB4B6D,EAAAA,EAASE,eAAeC,EAAAA,EAAaC,OAAOG,oBAqBxE7C,kBApBiCF,IACjCuC,EAASI,EAAAA,EAAazC,kBAAkBF,GAAe,EAoBvDG,kBATgC6C,KAChCT,EAASI,EAAAA,EAAaM,QAAQC,QAAQ,EAStCxE,qBAlBmCyE,KACnCZ,EAASI,EAAAA,EAAaG,uBAAuB,EAkB7C5G,mBAfkCU,IAClC2F,EAASI,EAAAA,EAAaM,QAAQ/G,mBAAmBU,GAAS,EAe3D,C,yDC9BH,MAuBA,EAvBqBH,KACnB,MAAM8F,EAAWC,EAAAA,EAASC,iBAa1B,MAAO,CACLW,KAbiBZ,EAAAA,EAASE,eAAeW,EAAAA,EAAUT,OAAOQ,MAc1DE,SAbqBd,EAAAA,EAASE,eAAeW,EAAAA,EAAUT,OAAOU,UAc9D9G,UAbsBgG,EAAAA,EAASE,eAAeW,EAAAA,EAAUT,OAAOW,WAc/DC,QAZsBC,KACtBlB,EAASc,EAAAA,EAAUK,YAAY,EAY/BC,eAT6BC,KAC7BrB,EAASc,EAAAA,EAAUJ,QAAQC,QAAQ,EASpC,C","sources":["helpers/camel-case-to-title-case.helper.ts","shared-components/inputs/BaseInput.component.tsx","shared-components/icons/IconSearch.component.tsx","shared-components/inputs/SearchInput.component.tsx","shared-components/icons/IconEdit.component.tsx","shared-components/icons/IconDelete.component.tsx","shared-components/icons/IconDetail.component.tsx","helpers/highlight-keyword.helper.ts","products/components/ProductList.component.tsx","helpers/kebab-case-to-title-case.hepler.ts","products/components/AddProduct.component.tsx","pages/Product.page.tsx","shared-components/SectionHeading.component.tsx","shared-components/dialog/DialogHeader.component.tsx","shared-components/inputs/FormikInputField.component.tsx","shared-components/inputs/FormikSelectField.component.tsx","store/hooks/use-product-store.hook.ts","store/hooks/use-user-store.hook.ts"],"sourcesContent":["const camelCaseToTitleCase = (str: string) =>\r\n  str\r\n    .replace(/([A-Z])/g, \" $1\")\r\n    .replace(/^./, (str) => str.toUpperCase())\r\n    .trim();\r\n\r\nexport default camelCaseToTitleCase;\r\n","import React from \"react\";\r\n\r\n// TODO: input tiplerini barındıran bir enum oluşturulacak.\r\nexport type InputTypes =\r\n  | \"text\"\r\n  | \"number\"\r\n  | \"email\"\r\n  | \"password\"\r\n  | \"date\"\r\n  | \"datetime-local\"\r\n  | \"time\"\r\n  | \"month\"\r\n  | \"week\"\r\n  | \"url\"\r\n  | \"search\"\r\n  | \"tel\"\r\n  | \"color\"\r\n  | \"file\"\r\n  | \"range\"\r\n  | \"hidden\"\r\n  | \"checkbox\"\r\n  | \"radio\";\r\n\r\ninterface BaseInputProps {\r\n  type?: InputTypes;\r\n  label?: string;\r\n  id?: string;\r\n  value?: string;\r\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\r\n  placeholder?: string;\r\n  className?: string;\r\n  name?: string;\r\n}\r\n\r\nconst Input: React.FC<BaseInputProps> = ({\r\n  type = \"text\",\r\n  label: inputLabel,\r\n  id: inputId,\r\n  value: inputValue,\r\n  onChange: onInputChange,\r\n  placeholder,\r\n  className,\r\n  name,\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-2\" aria-roledescription=\"base-input\">\r\n      {inputLabel && (\r\n        <label className=\"font-medium text-gray-900\" htmlFor={inputId}>\r\n          {inputLabel}\r\n        </label>\r\n      )}\r\n      <input\r\n        className={`outline-none ring-1 ring-gray-300 px-2 py-1 rounded focus:ring-indigo-500 focus:ring-2 transition-colors ${\r\n          className || \"\"\r\n        }`}\r\n        name={name}\r\n        type={type}\r\n        id={inputId}\r\n        value={inputValue}\r\n        onChange={onInputChange}\r\n        placeholder={placeholder}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Input);\r\n","import React from \"react\";\r\n\r\nconst IconSearch = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      viewBox=\"0 0 24 24\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19 11 A8 8 0 0 1 11 19 A8 8 0 0 1 3 11 A8 8 0 0 1 19 11 z\" />\r\n      <path d=\"M21 21l-4.35-4.35\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconSearch);\r\n","import React from \"react\";\r\nimport BaseInputComponent from \"./BaseInput.component\";\r\nimport ButtonIconComponent from \"../buttons/ButtonIcon.component\";\r\nimport IconSearchComponent from \"../icons/IconSearch.component\";\r\n\r\nconst SearchInput = ({ onSearch, placeholder }: { placeholder?: string; onSearch: (value: string) => void }) => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const handleOnSearch = () => {\r\n    onSearch(value);\r\n  };\r\n  return (\r\n    <div className=\"flex items-center\" aria-roledescription=\"search\">\r\n      <div className=\"flex-1\">\r\n        <BaseInputComponent\r\n          placeholder={placeholder || \"Search...\"}\r\n          type=\"search\"\r\n          onChange={(event) => {\r\n            setValue(event.target.value);\r\n          }}\r\n          className=\"border-r-0 rounded-e-none\"\r\n        />\r\n      </div>\r\n      <ButtonIconComponent onClick={handleOnSearch}>\r\n        <IconSearchComponent className=\"w-5 h-5\" />\r\n      </ButtonIconComponent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SearchInput);\r\n","import React from \"react\";\r\n\r\nconst IconEdit = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg viewBox=\"0 0 1024 1024\" fill=\"currentColor\" height=\"1em\" width=\"1em\" {...props}>\r\n      <path d=\"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconEdit);\r\n","import React from \"react\";\r\n\r\nconst IconDelete = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"1em\" width=\"1em\" {...props}>\r\n      <path d=\"M6 19a2 2 0 002 2h8a2 2 0 002-2V7H6v12M8 9h8v10H8V9m7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconDelete);\r\n","import React from \"react\";\r\n\r\nconst IconDetail = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"1em\" width=\"1em\" {...props}>\r\n      <path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z\" />\r\n      <path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconDetail);\r\n","const highlightKeyword = (text: string, keyword: string) => {\r\n  if (!text || !keyword) return text;\r\n  const regex = new RegExp(keyword, \"gi\");\r\n  return text.replace(\r\n    regex,\r\n    (match) => `<span class=\"underline font-semibold text-indigo-500\" title='Search Term'>${match}</span>`\r\n  );\r\n};\r\n\r\nexport default highlightKeyword;\r\n","import React from \"react\";\r\nimport useProductStore from \"../../store/hooks/use-product-store.hook\";\r\nimport ButtonIconComponent from \"../../shared-components/buttons/ButtonIcon.component\";\r\nimport IconEditComponent from \"../../shared-components/icons/IconEdit.component\";\r\nimport IconDeleteComponent from \"../../shared-components/icons/IconDelete.component\";\r\nimport IconDetailComponent from \"../../shared-components/icons/IconDetail.component\";\r\nimport highlightKeyword from \"../../helpers/highlight-keyword.helper\";\r\nimport ProductType from \"../models/product.type\";\r\nimport useAlertStore from \"../../store/hooks/user-alert-store.hook\";\r\nimport useToastrStore from \"../../store/hooks/use-toastr-store.hook\";\r\nimport useUserStore from \"../../store/hooks/use-user-store.hook\";\r\n\r\nconst ProductList = ({ keyword, onSelectProduct }: { keyword?: string; onSelectProduct?: () => void }) => {\r\n  const { productList, setSelectedProduct } = useProductStore();\r\n  const { addAlert } = useAlertStore();\r\n  const { addToastr } = useToastrStore();\r\n  const { firstName } = useUserStore();\r\n\r\n  const handleOnselectProduct = (product: ProductType) => {\r\n    setSelectedProduct(product);\r\n    if (onSelectProduct) {\r\n      onSelectProduct();\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = (product: ProductType) => {\r\n    addAlert({\r\n      text: `Are you sure you want to delete ${product.title}?`,\r\n      title: \"Delete\",\r\n      variant: \"danger\",\r\n      confirmCallback: (isConfirmed) => {\r\n        if (isConfirmed) {\r\n          addToastr({\r\n            variant: \"success\",\r\n            message: ` ${firstName}, you deleted ${product.title}.`,\r\n          });\r\n        } else {\r\n          addToastr({\r\n            variant: \"warning\",\r\n            message: ` ${firstName}, you canceled the deletion ${product.title}.`,\r\n          });\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  if (!productList || productList.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded border h-full overflow-auto\">\r\n      <table className=\"w-full border-collapse\" aria-roledescription=\"product list\">\r\n        <thead className=\"sticky top-0 border-b bg-gradient-to-t from-gray-100 to-white\">\r\n          <tr>\r\n            <th className=\"p-3 text-left font-semibold\">Image</th>\r\n            <th className=\"p-3 text-left font-semibold\">Name</th>\r\n            <th className=\"p-3 text-left font-semibold\">Brand</th>\r\n            <th className=\"p-3 text-left font-semibold\">Description</th>\r\n            <th className=\"p-3 text-left font-semibold\">Price</th>\r\n            <th className=\"p-3 text-left font-semibold\">Discount</th>\r\n            <th className=\"p-3 text-left font-semibold\">Rating</th>\r\n            <th className=\"p-3 text-left font-semibold\">Quantity</th>\r\n            <th className=\"p-3 text-left font-semibold\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"h-full overflow-auto\">\r\n          {productList?.map((product) => (\r\n            <tr key={product.id} className=\"border-b last:border-0 even:bg-indigo-50/50\">\r\n              <td className=\"p-3\">\r\n                <img src={product.thumbnail} alt={product.title} className=\"rounded w-10\" />\r\n              </td>\r\n              <td className=\"p-3\" dangerouslySetInnerHTML={{ __html: highlightKeyword(product.title, keyword) }}></td>\r\n              <td className=\"p-3\">{product.brand}</td>\r\n              <td\r\n                className=\"p-3 w-96\"\r\n                dangerouslySetInnerHTML={{ __html: highlightKeyword(product.description, keyword) }}\r\n              ></td>\r\n              <td className=\"p-3\">{product.price}$</td>\r\n              <td className=\"p-3\">{product.discountPercentage}%</td>\r\n              <td className=\"p-3\">{product.rating}</td>\r\n              <td className=\"p-3\">{product.stock}</td>\r\n              <td className=\"p-3\">\r\n                <div className=\"flex gap-2 flex-nowrap justify-end items-center\">\r\n                  <ButtonIconComponent variant=\"primary\">\r\n                    <IconDetailComponent className=\"w-5 h-5\" />\r\n                  </ButtonIconComponent>\r\n                  <ButtonIconComponent variant=\"warning\" onClick={() => handleOnselectProduct(product)}>\r\n                    <IconEditComponent className=\"w-5 h-5\" />\r\n                  </ButtonIconComponent>\r\n                  <ButtonIconComponent variant=\"danger\" onClick={() => handleDeleteProduct(product)}>\r\n                    <IconDeleteComponent className=\"w-5 h-5\" />\r\n                  </ButtonIconComponent>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProductList);\r\n","const kababCaseToTitleCase = (str: string) =>\r\n  str\r\n    .split(\"-\")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n\r\nexport default kababCaseToTitleCase;\r\n","import { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport FormikInputFieldComponent from \"../../shared-components/inputs/FormikInputField.component\";\r\nimport FormikSelectFieldComponent from \"../../shared-components/inputs/FormikSelectField.component\";\r\nimport { ProductFormType } from \"../models/product.type\";\r\nimport ButtonComponent from \"../../shared-components/buttons/Button.component\";\r\nimport useProductStore from \"../../store/hooks/use-product-store.hook\";\r\nimport kababCaseToTitleCase from \"../../helpers/kebab-case-to-title-case.hepler\";\r\nimport * as yup from \"yup\";\r\n\r\ntype AddProductProps = {\r\n  onSubmit: (values: ProductFormType) => void;\r\n};\r\n\r\nconst AddProduct = ({ onSubmit }: AddProductProps) => {\r\n  const { productCategories, setProductCategories, selectedProduct } = useProductStore();\r\n  const categories = React.useMemo(() => {\r\n    return productCategories.map((category) => ({\r\n      value: category,\r\n      label: kababCaseToTitleCase(category),\r\n    }));\r\n  }, [productCategories]);\r\n\r\n  React.useEffect(() => {\r\n    if (productCategories.length === 0) {\r\n      setProductCategories();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productCategories]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    brand: yup.string().required(\"Brand is required\"),\r\n    category: yup.string().required(\"Category is required\"),\r\n    description: yup.string().required(\"Description is required\"),\r\n    discountPercentage: yup\r\n      .number()\r\n      .min(0, \"Discount percentage must be greater than or equal to 0\")\r\n      .max(100, \"Discount percentage must be less than or equal to 100\")\r\n      .required(\"Discount percentage is required\"),\r\n    price: yup.number().min(0, \"Price must be greater than or equal to 0\").required(\"Price is required\"),\r\n    rating: yup\r\n      .number()\r\n      .min(0, \"Rating must be greater than or equal to 0\")\r\n      .max(5, \"Rating must be less than or equal to 5\")\r\n      .required(\"Rating is required\"),\r\n    stock: yup.number().min(0, \"Stock must be greater than or equal to 0\").required(\"Stock is required\"),\r\n    title: yup.string().required(\"Title is required\"),\r\n  });\r\n\r\n  const initialValues: ProductFormType = {\r\n    brand: selectedProduct?.brand || \"\",\r\n    category: selectedProduct?.category || \"\",\r\n    description: selectedProduct?.description || \"\",\r\n    discountPercentage: selectedProduct?.discountPercentage || \"\",\r\n    price: selectedProduct?.price || \"\",\r\n    rating: selectedProduct?.rating || \"\",\r\n    stock: selectedProduct?.stock || \"\",\r\n    title: selectedProduct?.title || \"\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-10 h-full overflow-auto\">\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} enableReinitialize>\r\n        <Form className=\"grid grid-cols-2 gap-5\">\r\n          <FormikInputFieldComponent fieldName=\"brand\" required />\r\n          <FormikSelectFieldComponent fieldName=\"category\" options={categories} required />\r\n          <FormikInputFieldComponent fieldName=\"description\" required />\r\n          <FormikInputFieldComponent fieldName=\"discountPercentage\" type=\"number\" required />\r\n          <FormikInputFieldComponent fieldName=\"price\" type=\"number\" required />\r\n          <FormikInputFieldComponent fieldName=\"rating\" type=\"number\" required />\r\n          <FormikInputFieldComponent fieldName=\"stock\" type=\"number\" required />\r\n          <FormikInputFieldComponent fieldName=\"title\" required />\r\n          <div className=\"col-span-2 flex justify-end\">\r\n            <ButtonComponent type=\"submit\" text={selectedProduct ? \"Update\" : \"Add\"}></ButtonComponent>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddProduct);\r\n","import React from \"react\";\r\nimport SectionHeadingComponent from \"../shared-components/SectionHeading.component\";\r\nimport SearchInputComponent from \"../shared-components/inputs/SearchInput.component\";\r\nimport useProductStore from \"../store/hooks/use-product-store.hook\";\r\nimport ProductListComponent from \"../products/components/ProductList.component\";\r\nimport ButtonComponent from \"../shared-components/buttons/Button.component\";\r\nimport useToastrStore from \"../store/hooks/use-toastr-store.hook\";\r\nimport AddProductComponent from \"../products/components/AddProduct.component\";\r\nimport DialogHeaderComponent from \"../shared-components/dialog/DialogHeader.component\";\r\nimport useUserStore from \"../store/hooks/use-user-store.hook\";\r\n\r\nconst ProductPage = () => {\r\n  const { firstName } = useUserStore();\r\n  const dialogRef = React.useRef<HTMLDialogElement>(null);\r\n  const { addToastr } = useToastrStore();\r\n  const [searchKeyword, setSearchKeyword] = React.useState<string>(\"\");\r\n  const { searchProductList, resetProductStore, selectedProduct, setSelectedProduct } = useProductStore();\r\n\r\n  const handleOnSearch = React.useCallback(\r\n    (value: string) => {\r\n      setSearchKeyword(value);\r\n      if (!value) {\r\n        addToastr({\r\n          message: `${firstName}, please enter search keyword. For example 'phone'.`,\r\n          variant: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      searchProductList(value);\r\n    },\r\n    [searchProductList, addToastr, firstName]\r\n  );\r\n\r\n  const handleCloseDialog = React.useCallback(() => {\r\n    dialogRef.current?.close();\r\n    setSelectedProduct(null);\r\n  }, [dialogRef, setSelectedProduct]);\r\n\r\n  const handleAddProduct = () => {\r\n    dialogRef.current?.showModal();\r\n  };\r\n\r\n  const handleSubmitForm = React.useCallback(() => {\r\n    addToastr({\r\n      message: `${firstName}, ${\r\n        selectedProduct ? \"you have successfully updated a product\" : \"you have successfully added a product\"\r\n      }.`,\r\n      variant: \"success\",\r\n    });\r\n    handleCloseDialog();\r\n  }, [addToastr, handleCloseDialog, firstName, selectedProduct]);\r\n\r\n  const handleOnselectProduct = () => {\r\n    dialogRef.current?.showModal();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    return () => resetProductStore();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div aria-roledescription=\"product\" className=\"h-full\">\r\n        <SectionHeadingComponent title=\"Product\" subtitle=\"View, edit, add, or delete product\" />\r\n        <div className=\"p-10 h-[calc(100%-64px)] flex flex-col gap-5\">\r\n          <div className=\"flex justify-between\">\r\n            <SearchInputComponent placeholder=\"Search products...\" onSearch={handleOnSearch} />\r\n            <div>\r\n              <ButtonComponent text=\"Add Product\" onClick={handleAddProduct} />\r\n            </div>\r\n          </div>\r\n          <div className=\"h-[calc(100%-56px)]\">\r\n            <ProductListComponent keyword={searchKeyword} onSelectProduct={handleOnselectProduct} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <dialog\r\n        aria-roledescription=\"add product dialog\"\r\n        ref={dialogRef}\r\n        className=\"rounded w-1/3 shadow-2xl ring-1 ring-gray-300 h-2/4\"\r\n      >\r\n        <div className=\"h-full flex flex-col\">\r\n          <DialogHeaderComponent\r\n            title={selectedProduct ? \"Update Product\" : \"Add Product\"}\r\n            onClose={handleCloseDialog}\r\n          />\r\n          <AddProductComponent onSubmit={handleSubmitForm} />\r\n        </div>\r\n      </dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProductPage);\r\n","import React from \"react\";\r\n\r\nconst SectionHeading = ({ title, subtitle }: { title: string; subtitle?: string }) => {\r\n  return (\r\n    <div className=\"p-2 shadow-md bg-white\" aria-roledescription=\"section-heading\">\r\n      <h1 className=\"text-lg font-medium\">{title}</h1>\r\n      {subtitle && <h2 className=\"text-gray-600 italic\">{subtitle}</h2>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SectionHeading);\r\n","import React from \"react\";\r\nimport ButtonIconComponent from \"../buttons/ButtonIcon.component\";\r\nimport IconCloseComponent from \"../icons/IconClose.component\";\r\n\r\ntype DialogHeaderProps = {\r\n  onClose: () => void;\r\n  title: string;\r\n};\r\n\r\nconst DialogHeader = ({ onClose, title }: DialogHeaderProps) => {\r\n  return (\r\n    <header className=\"flex items-center justify-between p-5 border-b\">\r\n      <span className=\"font-medium text-base text-gray-500\">{title}</span>\r\n      <ButtonIconComponent variant=\"danger\" onClick={onClose}>\r\n        <IconCloseComponent className=\"w-3 h-3\" />\r\n      </ButtonIconComponent>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default React.memo(DialogHeader);\r\n","import React from \"react\";\r\nimport { ErrorMessage, Field, useFormikContext } from \"formik\";\r\nimport camelCaseToTitleCase from \"../../helpers/camel-case-to-title-case.helper\";\r\nimport { InputTypes } from \"./BaseInput.component\";\r\n\r\ntype FormikFieldProps = {\r\n  fieldName: any | string;\r\n  type?: InputTypes;\r\n} & React.InputHTMLAttributes<HTMLInputElement>;\r\n\r\nconst FormikField = ({ fieldName, type = \"text\", ...restProps }: FormikFieldProps) => {\r\n  const formik = useFormikContext<{ [field: string]: string }>();\r\n  const [hasError, setHasError] = React.useState(formik.errors[fieldName]);\r\n\r\n  React.useEffect(() => {\r\n    setHasError(formik.errors[fieldName]);\r\n  }, [formik, fieldName]);\r\n  return (\r\n    <div className=\"flex flex-col gap-3\">\r\n      <label htmlFor={fieldName} className=\"text-gray-700\">\r\n        {camelCaseToTitleCase(fieldName)} {restProps.required ? <span className=\"text-red-500\">*</span> : null}{\" \"}\r\n      </label>\r\n      <Field\r\n        type={type}\r\n        id={fieldName}\r\n        name={fieldName}\r\n        className={`formik-field ${hasError ? \"ring-red-500\" : \"ring-gray-300\"}`}\r\n        {...restProps}\r\n      />\r\n      <ErrorMessage component=\"span\" className=\"text-red-500 text-xs\" name={fieldName} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(FormikField);\r\n","import { ErrorMessage, Field, useFormikContext } from \"formik\";\r\nimport React from \"react\";\r\nimport camelCaseToTitleCase from \"../../helpers/camel-case-to-title-case.helper\";\r\n\r\ntype FormikSelectFieldProps = {\r\n  fieldName: any | string;\r\n  options: { value: string; label: string }[];\r\n} & React.SelectHTMLAttributes<HTMLSelectElement>;\r\n\r\nconst FormikSelectField = ({ fieldName, options, ...restProps }: FormikSelectFieldProps) => {\r\n  const formik = useFormikContext<{ [field: string]: string }>();\r\n  const [hasError, setHasError] = React.useState(formik.errors[fieldName]);\r\n\r\n  React.useEffect(() => {\r\n    setHasError(formik.errors[fieldName]);\r\n  }, [formik, fieldName]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-3\">\r\n      <label htmlFor={fieldName} className=\"text-gray-700\">\r\n        {camelCaseToTitleCase(fieldName)}\r\n        {restProps.required ? <span className=\"text-red-500\">*</span> : null}{\" \"}\r\n      </label>\r\n      <Field\r\n        className={`formik-field ${hasError ? \"ring-red-500\" : \"ring-gray-300\"}`}\r\n        as=\"select\"\r\n        name={fieldName}\r\n        id={fieldName}\r\n        {...restProps}\r\n      >\r\n        <option value=\"\">Select an option</option>\r\n        {options.map(({ value, label }) => (\r\n          <option key={value} value={value}>\r\n            {label}\r\n          </option>\r\n        ))}\r\n      </Field>\r\n      <ErrorMessage component=\"span\" className=\"text-red-500 text-xs\" name={fieldName} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(FormikSelectField);\r\n","import AppStore from \"..\";\r\nimport ProductType from \"../../products/models/product.type\";\r\nimport ProductStore from \"../slices/product-store.slice\";\r\n\r\nconst useProductStore = () => {\r\n  const dispatch = AppStore.useAppDispatch();\r\n  const selectProductList = AppStore.useAppSelector(ProductStore.select.getProductList);\r\n  const selectProductCategories = AppStore.useAppSelector(ProductStore.select.getProductCategories);\r\n  const selectSelectedProduct = AppStore.useAppSelector(ProductStore.select.getSelectedProduct);\r\n  const dispatchSearchProductList = (searchKeyword: string) => {\r\n    dispatch(ProductStore.searchProductList(searchKeyword));\r\n  };\r\n\r\n  const dispatchSetProductCategories = () => {\r\n    dispatch(ProductStore.getProductCategories());\r\n  };\r\n\r\n  const dispatchSetSelectedProduct = (product: ProductType | null) => {\r\n    dispatch(ProductStore.actions.setSelectedProduct(product));\r\n  };\r\n\r\n  const dispatchResetProductStore = () => {\r\n    dispatch(ProductStore.actions.reset());\r\n  };\r\n\r\n  return {\r\n    productList: selectProductList,\r\n    productCategories: selectProductCategories,\r\n    selectedProduct: selectSelectedProduct,\r\n    searchProductList: dispatchSearchProductList,\r\n    resetProductStore: dispatchResetProductStore,\r\n    setProductCategories: dispatchSetProductCategories,\r\n    setSelectedProduct: dispatchSetSelectedProduct,\r\n  };\r\n};\r\n\r\nexport default useProductStore;\r\n","import AppStore from \"..\";\r\nimport UserStore from \"../slices/user-store.slice\";\r\n\r\nconst useUserStore = () => {\r\n  const dispatch = AppStore.useAppDispatch();\r\n  const selectUser = AppStore.useAppSelector(UserStore.select.user);\r\n  const selectFullName = AppStore.useAppSelector(UserStore.select.fullName);\r\n  const selectFirstName = AppStore.useAppSelector(UserStore.select.firstname);\r\n\r\n  const dispatchSetUser = () => {\r\n    dispatch(UserStore.fetchUser());\r\n  };\r\n\r\n  const dispatchResetUserStore = () => {\r\n    dispatch(UserStore.actions.reset());\r\n  };\r\n\r\n  return {\r\n    user: selectUser,\r\n    fullName: selectFullName,\r\n    firstName: selectFirstName,\r\n    setUser: dispatchSetUser,\r\n    resetUserStore: dispatchResetUserStore,\r\n  };\r\n};\r\n\r\nexport default useUserStore;\r\n"],"names":["str","replace","toUpperCase","trim","Input","_ref","type","label","inputLabel","id","inputId","value","inputValue","onChange","onInputChange","placeholder","className","name","_jsxs","children","_jsx","htmlFor","concat","React","IconSearch","props","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","height","width","d","SearchInput","onSearch","setValue","BaseInputComponent","event","target","ButtonIconComponent","onClick","handleOnSearch","IconSearchComponent","IconEdit","IconDelete","IconDetail","highlightKeyword","text","keyword","regex","RegExp","match","ProductList","onSelectProduct","productList","setSelectedProduct","useProductStore","addAlert","useAlertStore","addToastr","useToastrStore","firstName","useUserStore","length","map","product","src","thumbnail","alt","title","dangerouslySetInnerHTML","__html","brand","description","price","discountPercentage","rating","stock","variant","IconDetailComponent","handleOnselectProduct","IconEditComponent","confirmCallback","isConfirmed","message","handleDeleteProduct","IconDeleteComponent","split","word","charAt","slice","join","AddProduct","onSubmit","productCategories","setProductCategories","selectedProduct","categories","category","kababCaseToTitleCase","validationSchema","yup","shape","required","min","max","initialValues","Formik","enableReinitialize","Form","FormikInputFieldComponent","fieldName","FormikSelectFieldComponent","options","ButtonComponent","ProductPage","dialogRef","searchKeyword","setSearchKeyword","searchProductList","resetProductStore","handleCloseDialog","_dialogRef$current","current","close","handleSubmitForm","_Fragment","SectionHeadingComponent","subtitle","SearchInputComponent","handleAddProduct","_dialogRef$current2","showModal","ProductListComponent","_dialogRef$current3","ref","DialogHeaderComponent","onClose","AddProductComponent","SectionHeading","DialogHeader","IconCloseComponent","FormikField","restProps","formik","useFormikContext","hasError","setHasError","errors","camelCaseToTitleCase","Field","ErrorMessage","component","FormikSelectField","as","_ref2","dispatch","AppStore","useAppDispatch","useAppSelector","ProductStore","select","getProductList","getProductCategories","getSelectedProduct","dispatchResetProductStore","actions","reset","dispatchSetProductCategories","user","UserStore","fullName","firstname","setUser","dispatchSetUser","fetchUser","resetUserStore","dispatchResetUserStore"],"sourceRoot":""}